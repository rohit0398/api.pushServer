(() => {
  const e = document.getElementById('pushNotificationButton'); e ? e.addEventListener('click', (() => {
    'Notification' in window && navigator.serviceWorker && Notification.requestPermission().then((async (e) => {
      if (e === 'granted') {
        try { console.log('loadddd', navigator?.serviceWorker); const e = await navigator.serviceWorker.register('/serviceWorker.js'); console.log('Service Worker registered with scope:', e.scope); } catch (e) { console.error('Service Worker registration failed:', e, e?.message); }console.log('server sw', await navigator.serviceWorker.ready); const e = await navigator.serviceWorker.ready; console.log('server sw', e); const o = await e.pushManager.subscribe({ userVisibleOnly: !0, applicationServerKey: 'BL4CN0bTsLEAUoC4WV1xcNAYj33T1F58PgeJgEUO0n_TQn1qpKG1oa7bfmhizBG1ei3tD_jka35c6HhBmw4Mkms' }); console.log(JSON.stringify(o)); const i = new URL(window.location.href); const t = new URLSearchParams(i.search); const r = navigator.language || navigator.userLanguage; const n = Intl.DateTimeFormat().resolvedOptions().timeZone; const { userAgent: a } = navigator; let s = ''; s = a.includes('Firefox') ? 'Firefox' : a.includes('Chrome') ? 'Chrome' : a.includes('Safari') ? 'Safari' : a.includes('Edge') ? 'Edge' : a.includes('Opera') || a.includes('OPR') ? 'Opera' : a.includes('Mozilla') ? 'Mozilla' : a.includes('Samsung') ? 'Samsung' : a.includes('Android') ? 'Android' : a.includes('UCBrowser') ? 'UCBrowser' : 'Unknown'; const c = a.toLowerCase(); const l = /iphone|ipod|android|blackberry|opera mini|iemobile|wpdesktop/i.test(c); const d = /ipad|android|kindle/i.test(c); const g = /smarttv|appletv|googletv|hbbtv|pov_tv|netcast|webos|roku|dlnadoc|roku|viera|boxee|kylo|yabrowser|kaltura/i.test(c); const u = /xbox|playstation/i.test(c); const p = /android|ipod|iphone|symbian|blackberry|smartwatch/i.test(c); const v = /automotive|phantom/i.test(c); let b = 'Desktop'; l ? b = 'Mobile' : d ? b = 'Tablet' : g ? b = 'Smarttv' : u ? b = 'Console' : p ? b = 'Wearable' : v && (b = 'Embedded'); const m = navigator?.userAgentData?.platform; const w = {
          feedId, lang: r, os: m, timezone: n, browser: s, deviceType: b, pushSubscription: o,
        }; for (const [e, o] of t.entries())w[e] = o; fetch('http://localhost:9987/api/v1/subscription', { method: 'POST', headers: { Authorization: 'UPDATE_TOKEN', 'Custom-Header': 'UPDATE_CUSTOM_VALUE', 'Content-Type': 'application/json' }, body: JSON.stringify(w) }).catch(((e) => { console.log(e); })), successUrl && window.open(successUrl, '_blank');
      } else e === 'denied' && updateDeniedUrl && window.open(updateDeniedUrl, '_blank');
    }));
  })) : console.log('notification button not found');
})();
